{"version":3,"sources":["components/Poruka.js","components/Footer.js","services/poruke.js","App.js","index.js"],"names":["Poruka","poruka","promjenaVaznosti","brisiPoruku","oznaka","vazno","className","sadrzaj","onClick","Footer","style","color","fontSize","marginTop","border","width","axios","get","then","response","data","noviObjekt","post","id","put","delete","App","props","useState","poruke","postaviPoruke","unosPoruke","postaviUnos","ispisiSve","postaviIspis","useEffect","console","log","porukeServer","pocPoruke","length","porukeZaIspis","filter","p","map","key","find","novaPoruka","promjenaVaznostiPoruke","onSubmit","e","preventDefault","target","datum","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"gNAaeA,EAXA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,YAClCC,EAASH,EAAOI,MAAQ,+BAAuB,6BACrD,OACI,wBAAIC,UAAU,UACTL,EAAOM,QACR,4BAAQC,QAASN,GAAmBE,GACpC,4BAAQI,QAASL,GAAjB,OCOGM,EAbA,WAQX,OACI,yBAAKC,MARU,CACfC,MAAO,MACPC,SAAU,GACVC,UAAW,GACXC,OAAQ,kBACRC,MAAO,SAGP,4C,gBCUO,EAjBI,WAEf,OADgBC,IAAMC,IAHP,eAIAC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAe/B,EAZA,SAAAC,GACX,OAAOL,IAAMM,KARE,cAQeD,IAWnB,EARC,SAACE,EAAIF,GACjB,OAAOL,IAAMQ,IAAN,UAZQ,cAYR,YAA2BD,GAAMF,IAO7B,EAJD,SAAAE,GACV,OAAOP,IAAMS,OAAN,UAhBQ,cAgBR,YAA8BF,KC6E1BG,EA1FH,SAACC,GAAU,MAEWC,mBAAS,IAFpB,mBAEdC,EAFc,KAENC,EAFM,OAGaF,mBAAS,mBAHtB,mBAGdG,EAHc,KAGFC,EAHE,OAIaJ,oBAAS,GAJtB,mBAIdK,EAJc,KAIHC,EAJG,KAMrBC,qBAAU,WACRC,QAAQC,IAAI,eACZC,IAEGpB,MAAK,SAAAqB,GACJH,QAAQC,IAAI,0BACZP,EAAcS,QAEjB,IAEHH,QAAQC,IAAI,iBAAkBR,EAAOW,OAAQ,YAE7C,IAAMC,EAAgBR,EAAYJ,EAASA,EAAOa,QAAO,SAAAC,GAAC,OAAgB,IAAZA,EAAEtC,SA8ChE,OACE,6BACE,6CACA,6BACE,4BAAQG,QAAS,kBAAM0B,GAAcD,KAArC,gBACWA,EAAY,kBAAe,QAGxC,4BACGQ,EAAcG,KAAI,SAAAD,GAAC,OAClB,kBAAC,EAAD,CACEE,IAAKF,EAAEpB,GACPtB,OAAQ0C,EACRxC,YAAa,kBAtBFoB,EAsBoBoB,EAAEpB,QArBzCe,EACSf,GACNL,MAAK,SAAAC,GACJiB,QAAQC,IAAIlB,GACZW,EAAcD,EAAOa,QAAO,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,SAL5B,IAACA,GAuBXrB,iBAAkB,kBApCG,SAACqB,GAC9B,IAAMtB,EAAS4B,EAAOiB,MAAK,SAAAH,GAAC,OAAIA,EAAEpB,KAAOA,KACnCwB,EAAU,2BACX9C,GADW,IAEdI,OAAQJ,EAAOI,QAEjBiC,EACWf,EAAIwB,GACZ7B,MAAK,SAACC,GACLiB,QAAQC,IAAIlB,GACZW,EAAcD,EAAOe,KAAI,SAAAD,GAAC,OAAIA,EAAEpB,KAAOA,EAAKoB,EAAIxB,EAASC,YA0B7B4B,CAAuBL,EAAEpB,WAGvD,0BAAM0B,SA7DS,SAACC,GAClBA,EAAEC,iBACFf,QAAQC,IAAI,OAAQa,EAAEE,QACtB,IAAM/B,EAAa,CACjBd,QAASwB,EACTsB,OAAO,IAAIC,MAAOC,cAClBlD,MAAOmD,KAAKC,SAAW,IAEzBnB,EACUjB,GACPH,MAAK,SAACC,GACLiB,QAAQC,IAAIlB,GACZW,EAAcD,EAAO6B,OAAOvC,EAASC,OACrCY,EAAY,SAiDZ,2BAAO2B,MAAO5B,EAAY6B,SA7CV,SAACV,GACrBd,QAAQC,IAAIa,EAAEE,OAAOO,OACrB3B,EAAYkB,EAAEE,OAAOO,UA4CjB,4BAAQE,KAAK,UAAb,WAEF,kBAAC,EAAD,Q,MCrFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.df267c17.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Poruka = ({ poruka, promjenaVaznosti, brisiPoruku }) => {\r\n    const oznaka = poruka.vazno ? \"Označi kao nevažno\" : \"Označi kao važno\"\r\n    return (\r\n        <li className=\"poruka\">\r\n            {poruka.sadrzaj}\r\n            <button onClick={promjenaVaznosti}>{oznaka}</button>\r\n            <button onClick={brisiPoruku}>-</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Poruka","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStil = {\r\n        color: 'red',\r\n        fontSize: 15,\r\n        marginTop: 20,\r\n        border: \"1px solid black\",\r\n        width: \"100%\"\r\n    }\r\n    return (\r\n        <div style={footerStil}>Alati i okviri za razvoj web aplikacija</div>\r\n    )\r\n}\r\n\r\nexport default Footer","\t\r\nimport axios from 'axios'\r\nconst osnovniUrl = '/api/poruke'\r\n \r\nconst dohvatiSve = () => {   \r\n    const promise = axios.get(osnovniUrl);\r\n    return promise.then( response => response.data)\r\n}\r\n \r\nconst stvori = noviObjekt => {\r\n    return axios.post(osnovniUrl, noviObjekt)\r\n}\r\n \r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\n\r\nconst brisi = id => {\r\n    return axios.delete(`${osnovniUrl}/${id}`)\r\n}\r\n \r\nexport default { dohvatiSve, stvori, osvjezi, brisi}\r\n/* export default {\r\n    dohvatiSve: dohvatiSve,\r\n    stvori: stvori,\r\n    osvjezi: osvjezi\r\n} */","import React, { useState, useEffect } from 'react'\r\nimport Poruka from './components/Poruka'\r\nimport Footer from './components/Footer'\r\nimport porukeServer from './services/poruke'\r\n\r\nconst App = (props) => {\r\n  //const { poruke } = props\r\n  const [poruke, postaviPoruke] = useState([])\r\n  const [unosPoruke, postaviUnos] = useState(\"...unesi poruku\")\r\n  const [ispisiSve, postaviIspis] = useState(true)\r\n\r\n  useEffect(() => {\r\n    console.log(\"Effect hook\");\r\n    porukeServer\r\n      .dohvatiSve()\r\n      .then(pocPoruke => {\r\n        console.log(\"Podaci su učitani\");\r\n        postaviPoruke(pocPoruke)\r\n      })\r\n  }, [])\r\n\r\n  console.log(\"Renderirano je\", poruke.length, \"objekata\")\r\n\r\n  const porukeZaIspis = ispisiSve ? poruke : poruke.filter(p => p.vazno === true)\r\n\r\n  const novaPoruka = (e) => {\r\n    e.preventDefault()\r\n    console.log(\"Klik\", e.target);\r\n    const noviObjekt = {\r\n      sadrzaj: unosPoruke,\r\n      datum: new Date().toISOString(),\r\n      vazno: Math.random() > 0.5\r\n    }\r\n    porukeServer\r\n      .stvori(noviObjekt)\r\n      .then((response) => {\r\n        console.log(response)\r\n        postaviPoruke(poruke.concat(response.data))\r\n        postaviUnos('')\r\n      })\r\n\r\n  }\r\n  const promjenaUnosa = (e) => {\r\n    console.log(e.target.value);\r\n    postaviUnos(e.target.value)\r\n  }\r\n\r\n  const promjenaVaznostiPoruke = (id) => {\r\n    const poruka = poruke.find(p => p.id === id)\r\n    const novaPoruka = {\r\n      ...poruka,\r\n      vazno: !poruka.vazno\r\n    }\r\n    porukeServer\r\n      .osvjezi(id, novaPoruka)\r\n      .then((response) => {\r\n        console.log(response);\r\n        postaviPoruke(poruke.map(p => p.id !== id ? p : response.data))\r\n      })\r\n  }\r\n  const brisiPoruku = (id) => {\r\n    porukeServer\r\n      .brisi(id)\r\n      .then(response => {\r\n        console.log(response);\r\n        postaviPoruke(poruke.filter(p => p.id !== id))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Poruke - Novo</h1>\r\n      <div>\r\n        <button onClick={() => postaviIspis(!ispisiSve)}>\r\n          Prikaži {ispisiSve ? \"samo važne\" : \"sve\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {porukeZaIspis.map(p =>\r\n          <Poruka\r\n            key={p.id}\r\n            poruka={p}\r\n            brisiPoruku={() => brisiPoruku(p.id)}\r\n            promjenaVaznosti={() => promjenaVaznostiPoruke(p.id)} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={novaPoruka}>\r\n        <input value={unosPoruke} onChange={promjenaUnosa} />\r\n        <button type=\"submit\">Spremi</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root')) \r\n\r\n"],"sourceRoot":""}